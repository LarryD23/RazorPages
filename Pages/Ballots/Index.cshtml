@page
@model Vote_Final.Pages.Ballots.IndexModel
@using Voting_Final.Models
@using Vote_Final.Utilities
@using Microsoft.AspNetCore.Mvc.Rendering
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="ballot-header">
    <h2 class="text-center">@ViewData["Title"]</h2>
    <div class="text-center">
        <p><b>Name:</b>@HttpContext.Session.GetString("_Name");<b>Id: 
</b> @HttpContext.Session.GetInt32("_Id").ToString()</p>
    </div>
    <h3 class="text-center">@Model.BallotModel.Ballot.BallotName</h3>
    <h4 class="text-center">@Model.BallotModel.Ballot.BallotDate</h4>
</div>

<h2>Races</h2>
<form method="post" asp-page-handler="OnPost">
    <ul class="race-list">
        @foreach (var raceModel in Model.BallotModel.RaceModels)
        {
            <li>@raceModel.Race.RaceName</li>
            <ul>
                @foreach (var candidate in raceModel.Candidates)
                {
                    <li>
                        <label>
                            <input type="radio" name="SelectedCandidateIds[@raceModel.Race.RaceId]" value="@candidate.CandidateId" />
                            @candidate.FirstName @candidate.LastName - @candidate.PartyAffiliation
                        </label>
                    </li>
                }
            </ul>
        }
    </ul>



    <h2>Ballot Issues</h2>
    <ul class="ballot-issues-list">
        @foreach (var issue in Model.BallotModel.BallotIssues)
        {
            <li>
                <label>
                    @issue.Title - @issue.Description
                </label>
                <br />
                <label>
                    <input type="radio" name="IsFors[@($"ballotIssue{issue.BallotIssueId}_Yes")]" value="true" />  @issue.YesOption
                </label>
                <label>
                    <input type="radio" name="IsFors[@($"ballotIssue{issue.BallotIssueId}_No")]" value="false" />  @issue.NoOption
                </label>
            </li>
        }
    </ul>

    <button type="submit">Submit</button>


   


</form>



@* <h2>Races</h2>
<form method="post" asp-page-handler="OnPost">
    <ul class="race-list">
        @foreach (var raceModel in Model.BallotModel.RaceModels)
        {
            <li>@raceModel.Race.RaceName</li>
            <ul>
                @foreach (var candidate in raceModel.Candidates)
                {
                    <li>
                        <label>
                          
                            <input type="hidden" asp-for="RaceBallotSelection.RaceId" value="@raceModel.Race.RaceId" />
                           
                            <input type="radio" asp-for="RaceBallotSelection.CandidateId" value="@candidate.CandidateId" />
                            @candidate.FirstName @candidate.LastName - @candidate.PartyAffiliation
                        </label>
                    </li>
                }
            </ul>
        }
    </ul> *@

@*    
   
    
    <!--Hidden inputs to store selection on BallotIssue and Races-->
 @*    <input type="hidden" asp-for="BallotIssueSelection.BallotId" />
    <input type="hidden" asp-for="BallotIssueSelection.TimeStamp" />
    <input type="hidden" asp-for="BallotIssueSelection.BallotIssueId" />
    <input type="hidden" asp-for="BallotIssueSelection.IsFor" />

     <input type="hidden" asp-for="RaceBallotSelection.RaceId" />  
     <input type="hidden" asp-for="RaceBallotSelection.BallotId" />
    <input type="hidden" asp-for="RaceBallotSelection.TimeStamp" />

    <input type="hidden" asp-for="BallotModel.Ballot.BallotName" />
    <input type="hidden" asp-for="BallotModel.Ballot.BallotDate" />
    <input type="hidden" asp-for="BallotModel.RaceModels" />
    <input type="hidden" asp-for="BallotModel.BallotIssues" /> *@












@*     <button type="submit" class="btn btn-primary">Submit Ballot</button>

</form>
 *@
    @* <h2>Races</h2>
<form method="post" asp-page-handler="OnPostSubmitBallotAsync">
    <ul class="race-list">
        @foreach (var rm in Model.BallotModel.RaceModels)
        {
            <li>@rm.Race.RaceName</li>
            <ul>
                @foreach (var candidate in rm.Candidates)
                {
                    <li>
                        <label>
                            <input type="radio" asp-for="@Model.BallotModel." value="@candidate.CandidateId" />
                            @candidate.FirstName @candidate.LastName - @candidate.PartyAffiliation
                        </label>
                    </li>
                }
            </ul>
        }
    </ul> 





@* PAGE TO REVERT TO 

@* @page
@model Vote_Final.Pages.Ballots.IndexModel
@using Voting_Final.Models
@using Vote_Final.Utilities




<div class="ballot-header">
    <h2 class="text-center">@ViewData["Title"]</h2>
    <h3 class="text-center">@Model.Ballots.FirstOrDefault()?.BallotName</h3>
    <h4 class="text-center">@Model.Ballots.FirstOrDefault()?.BallotDate.ToShortDateString()</h4>
</div>

<h1>@ViewData["Title"]</h1>

<div class="ballot-container">
    <h2>Races</h2>
    <form method="post" asp-page-handler="OnPostSubmitBallotAsync" name="CandidateVote"> <!-- Add form element here -->
    <ul class="race-list">
        @foreach (var race in Model.Races)
        {
            <h3>@race.RaceName</h3>
            <ul>
                @foreach (var candidateId in Model.CandidateRetrieval.GetValueOrDefault(race.RaceId, new List<int>()))
                {
                    var candidateDetails = Model.Candidates.FirstOrDefault(c => c.CandidateId == candidateId);
                    <li>
                        <label>
                            <input type="radio" name="@($"selectedCandidate_{race.RaceId}")" value="@candidateId" />
                            @candidateDetails.FirstName @candidateDetails.LastName - @candidateDetails.PartyAffiliation
                        </label>
                    </li>
                }
            </ul>
        }
    </ul>
   </form>

</div>






<h2>Ballot Issues</h2>
<ul class="ballot-issues-list">
    @foreach (var bi in Model.BallotIssues)
    {
        <h3></h3>
        <ul>
            @{
                var ballotIssues = Model.BallotIssueRetrieval.GetValueOrDefault(bi.BallotIssueId, new List<BallotIssue>());
            }
            @foreach (var ballotIssue in ballotIssues)
            {
                <li>@ballotIssue.Title - @ballotIssue.Description</li>
                <form method="post" name="BallotIssueVote_@ballotIssue.BallotIssueId">
                    <label>
                        <input type="radio" name="options[@bi.BallotIssueId]" value="true" @(bi.Options ? "checked" : "")> For
                    </label>
                    <label>
                        <input type="radio" name="options[@bi.BallotIssueId]" value="false" @(bi.Options ? "" : "checked")> Against
                    </label>
                   
                </form>
             
               
            }
        </ul>
    }
</ul>

<div class="submit-section">
    <form method="post" asp-page-handler="OnPostSubmitBallotAsync">
        <button type="submit" class="btn btn-primary">Submit Ballot</button>
    </form>
</div>




@section Scripts {
    <script>
        //initialize selection object
        var userSelections = [];

        //function to update selections for race
        function updateSelection(raceId, candidateId) 
        {
            userSelections[raceId] = candidateId;
        }

        //event listeners to selection elements
        document.querySelectorAll('.candidate-selection').forEach(item => {
            item.addEventListener('change', event => {
                // Get the race ID and selected candidate ID
                var raceId = item.getAttribute('data-race-id');
                var candidateId = item.value; 

                // Update user selections for the race
                updateSelection(raceId, candidateId);
            });
        });
        
        // Function to handle form submission
        function submitBallot() 
        {
         
            // Send the user selections to the server using an AJAX request
            fetch('/Ballots/SubmitBallot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userSelections)
            })
                .then(response => {
                    // Check if the response indicates success
                    if (response.ok) {
                        // Display a success message or perform any other action
                        alert('Ballot submitted successfully!');
                    } else {
                        // Handle server errors or other issues
                        throw new Error('Error submitting ballot');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Display an error message 
                    alert('Error submitting ballot. Please try again later.');
                });
        }
        addEventListener('submit', function (event) 
        {
            submitBallot();

        }
     @*    //     event.preventDefault();
        //     // Call the submitBallot function when the button is clicked
        //     submitBallot();
        // });

        // // Attach an event listener to the CandidateVote form
        // document.querySelector('form[name="CandidateVote"]').addEventListener('submit', function (event) {
        //     event.preventDefault();
        //     // Call the submitBallot function when the button is clicked
        //     submitBallot();
        // });

        // // Attach an event listener to the BallotIssueVote form
        // document.querySelector('form[name="BallotIssueVote"]').addEventListener('submit', function (event) {
        //     event.preventDefault();
        //     // Call the submitBallot function when the button is clicked
        //     submitBallot();
        // });

    </script>
}
 *@



@* @page
@model Vote_Final.Pages.Ballots.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Ballot[0].BallotName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ballot[0].BallotDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Ballot) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BallotName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BallotDate)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.BallotId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.BallotId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.BallotId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@