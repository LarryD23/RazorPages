// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voting_Final.Models;

#nullable disable

namespace Vote_Final.Migrations
{
    [DbContext(typeof(DomainContext))]
    [Migration("20240418221753_firstInit")]
    partial class firstInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vote_Final.Models.BallotIssueSelection", b =>
                {
                    b.Property<int>("BallotIssueSelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BallotIssueSelectionId"));

                    b.Property<int>("BallotId")
                        .HasColumnType("int");

                    b.Property<int>("BallotIssueId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.HasKey("BallotIssueSelectionId");

                    b.HasIndex("BallotId");

                    b.HasIndex("BallotIssueId");

                    b.HasIndex("VoterId");

                    b.ToTable("BallotIssueSelection", (string)null);
                });

            modelBuilder.Entity("Vote_Final.Models.RaceBallotSelection", b =>
                {
                    b.Property<int>("RaceBallotSelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceBallotSelectionId"));

                    b.Property<int>("BallotId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.HasKey("RaceBallotSelectionId");

                    b.HasIndex("BallotId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("RaceId");

                    b.HasIndex("VoterId");

                    b.ToTable("RaceBallotSelection", (string)null);
                });

            modelBuilder.Entity("Vote_Final.Models.Voter", b =>
                {
                    b.Property<int>("VoterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoterId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoterStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VotingDistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoterId");

                    b.ToTable("Voters");

                    b.HasData(
                        new
                        {
                            VoterId = 1,
                            Address = "123 3rd St",
                            IsAlive = true,
                            Phone = "406-555-9854",
                            VoterName = "John Smith",
                            VoterStatus = "Active",
                            VotingDistrict = "Ninth"
                        });
                });

            modelBuilder.Entity("Voting_Final.Models.Ballot", b =>
                {
                    b.Property<int>("BallotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BallotId"));

                    b.Property<DateTime>("BallotDate")
                        .HasMaxLength(255)
                        .HasColumnType("datetime2");

                    b.Property<string>("BallotName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BallotId");

                    b.ToTable("Ballot");

                    b.HasData(
                        new
                        {
                            BallotId = 1,
                            BallotDate = new DateTime(2024, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BallotName = "June Primary"
                        });
                });

            modelBuilder.Entity("Voting_Final.Models.BallotIssue", b =>
                {
                    b.Property<int>("BallotIssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BallotIssueId"));

                    b.Property<int>("BallotId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("YesOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BallotIssueId");

                    b.HasIndex("BallotId");

                    b.ToTable("BallotIssue");

                    b.HasData(
                        new
                        {
                            BallotIssueId = 1,
                            BallotId = 1,
                            Description = "allows all dogs over the age of 5 to vote",
                            NoOption = "No on Prop 4543",
                            Title = "Proposition 4543",
                            Type = "Proposition",
                            YesOption = "Yes on Prop 4543"
                        });
                });

            modelBuilder.Entity("Voting_Final.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartyAffiliation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CandidateId");

                    b.ToTable("Candidate");

                    b.HasData(
                        new
                        {
                            CandidateId = 1,
                            FirstName = "Gus",
                            LastName = "Dawg",
                            PartyAffiliation = "RePAWblican"
                        },
                        new
                        {
                            CandidateId = 2,
                            FirstName = "Donna",
                            LastName = "Diamond",
                            PartyAffiliation = "Green Party"
                        },
                        new
                        {
                            CandidateId = 3,
                            FirstName = "Javier",
                            LastName = "Mendez",
                            PartyAffiliation = "Socialista"
                        },
                        new
                        {
                            CandidateId = 4,
                            FirstName = "Larry",
                            LastName = "Diamond",
                            PartyAffiliation = "Get Down Party"
                        });
                });

            modelBuilder.Entity("Voting_Final.Models.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceId"));

                    b.Property<int>("BallotId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartisan")
                        .HasColumnType("bit");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RaceId");

                    b.HasIndex("BallotId");

                    b.ToTable("Race");

                    b.HasData(
                        new
                        {
                            RaceId = 1,
                            BallotId = 1,
                            IsPartisan = true,
                            RaceName = "United States Senate"
                        },
                        new
                        {
                            RaceId = 2,
                            BallotId = 1,
                            IsPartisan = true,
                            RaceName = "Governor"
                        },
                        new
                        {
                            RaceId = 3,
                            BallotId = 1,
                            IsPartisan = false,
                            RaceName = "Chief Justice"
                        });
                });

            modelBuilder.Entity("Voting_Final.Models.RaceCandidate", b =>
                {
                    b.Property<int>("RaceCandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceCandidateId"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.HasKey("RaceCandidateId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceCandidate");

                    b.HasData(
                        new
                        {
                            RaceCandidateId = 1,
                            CandidateId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            RaceCandidateId = 2,
                            CandidateId = 2,
                            RaceId = 1
                        },
                        new
                        {
                            RaceCandidateId = 3,
                            CandidateId = 3,
                            RaceId = 1
                        },
                        new
                        {
                            RaceCandidateId = 4,
                            CandidateId = 4,
                            RaceId = 2
                        });
                });

            modelBuilder.Entity("Vote_Final.Models.BallotIssueSelection", b =>
                {
                    b.HasOne("Voting_Final.Models.Ballot", null)
                        .WithMany()
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Voting_Final.Models.BallotIssue", null)
                        .WithMany()
                        .HasForeignKey("BallotIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vote_Final.Models.Voter", null)
                        .WithMany()
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vote_Final.Models.RaceBallotSelection", b =>
                {
                    b.HasOne("Voting_Final.Models.Ballot", null)
                        .WithMany()
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Voting_Final.Models.Candidate", null)
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voting_Final.Models.Race", null)
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vote_Final.Models.Voter", null)
                        .WithMany()
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Voting_Final.Models.BallotIssue", b =>
                {
                    b.HasOne("Voting_Final.Models.Ballot", "Ballot")
                        .WithMany("BallotIssues")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ballot");
                });

            modelBuilder.Entity("Voting_Final.Models.Race", b =>
                {
                    b.HasOne("Voting_Final.Models.Ballot", "Ballot")
                        .WithMany("Races")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ballot");
                });

            modelBuilder.Entity("Voting_Final.Models.RaceCandidate", b =>
                {
                    b.HasOne("Voting_Final.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voting_Final.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Voting_Final.Models.Ballot", b =>
                {
                    b.Navigation("BallotIssues");

                    b.Navigation("Races");
                });
#pragma warning restore 612, 618
        }
    }
}
